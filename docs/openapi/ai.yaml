openapi: 3.0.3
info:
  title: Helly AI API (MVP)
  version: 0.1.0
servers:
  - url: /v1
paths:
  /ingest/member-corpus:
    post:
      summary: Replace a team member's corpus for RAG
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IngestRequest'
      responses:
        '202':
          description: Accepted
  /query:
    post:
      summary: Ask a question about a member inferred from text
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryResponse'
components:
  schemas:
    FeedbackItem:
      type: object
      required: [id, content, created_at]
      properties:
        id: { type: string, format: uuid }
        content: { type: string }
        created_at: { type: string, format: date-time }
    FeedbackRef:
      type: object
      required: [id, created_at, snippet]
      properties:
        id: { type: string, format: uuid }
        created_at: { type: string, format: date-time }
        snippet: { type: string }
    IngestRequest:
      type: object
      required: [team_member_ref, items]
      properties:
        team_member_ref:
          type: string
          description: id | name | email; AI resolves to member id if not an id
        items:
          type: array
          items:
            $ref: '#/components/schemas/FeedbackItem'
        from: { type: string, format: date-time }
        to: { type: string, format: date-time }
        wipe_existing:
          type: boolean
          default: true
    QueryRequest:
      type: object
      required: [text]
      properties:
        text: { type: string }
        from: { type: string, format: date-time }
        to: { type: string, format: date-time }
        person_hint:
          type: string
          description: Optional hint (e.g., name/email) to help entity resolution
    QueryResponse:
      type: object
      required: [answer]
      properties:
        answer: { type: string }
        citations:
          type: array
          items:
            $ref: '#/components/schemas/FeedbackRef'
        meta:
          type: object
          properties:
            used_filters:
              type: object
              additionalProperties: true
            resolved_member_id:
              type: string
              format: uuid

